@startuml judges
hide unlinked
!include generic-blocks.plantuml

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant JudgesListPage <</administration/judges/judges>>
participant AddJudgePage <</administration/judges/add-judge>>
participant EditJudgePage <</administration/judges/edit-judge>>
participant DeleteJudgePage <</administration/judges/delete-judge>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant JudgesController <<judges.controller.js>> #lightyellow
participant JudgesListObject <<judgesDAO.getJudges()>> #lightyellow
participant UpdateJudgeObject <<judgesDAO.put()>> #lightyellow
participant DeleteJudgeObject <<judgesDAO.delete()>> #lightyellow
participant AddJudgeObject <<judgesDAO.post()>> #lightyellow

''' VALIDATORS
participant EditJudgeValidator #gold

''' TEMPLATES
participant JudgesListTemplate <</administration/judges/judges.njk>>
participant AddJudgeTemplate <</administration/judges/add-judge.njk>>
participant EditJudgeTemplate <</administration/judges/edit-judge.njk>>
participant DeleteJudgeTemplate <</administration/judges/delete-judge.njk>>
participant ErrorTemplate <<_errors/generic.njk>> #lavender

''' BACKEND CONTROLLER
participant BackendController

Actor -> JudgesListPage: click judges tab
JudgesListPage -> JudgesController : call judges controller

$genericAPICall(JudgesController, JudgesListObject, ErrorTemplate, "Failed to fetch judges")
$renderTemplateToPage(JudgesController, JudgesListTemplate, JudgesListPage)

alt Add a judge
  Actor -> JudgesListPage: click add new judge
  JudgesListPage -> JudgesController : call judges controller
  $renderTemplateToPage(JudgesController, AddJudgeTemplate, AddJudgePage)

  Actor -> AddJudgePage: add details and click submit
  AddJudgePage -> JudgesController : call judges controller
  $validateInput(JudgesController, EditJudgeValidator, AddJudgeTemplate, AddJudgePage)
  $genericAPICall(JudgesController, AddJudgeObject, ErrorTemplate, "Failed to add a new judge")
end

alt Update judges details
  Actor -> JudgesListPage: click update judge details
  JudgesListPage -> JudgesController : call judges controller
  $renderTemplateToPage(JudgesController, EditJudgeTemplate, EditJudgePage)

  Actor -> EditJudgePage: click submit
  EditJudgePage -> JudgesController : call judges controller
  $validateInput(JudgesController, EditJudgeValidator, EditJudgeTemplate, EditJudgePage)
  $genericAPICall(JudgesController, UpdateJudgeObject, ErrorTemplate, "Failed to update judge's details")
end

alt delete a judge
  Actor -> JudgesListPage: click delete judge
  JudgesListPage -> JudgesController : call judges controller
  $renderTemplateToPage(JudgesController, DeleteJudgeTemplate, DeleteJudgePage)

  Actor -> DeleteJudgePage: click delete
  DeleteJudgePage -> JudgesController : call judges controller
  $genericAPICall(JudgesController, DeleteJudgeObject, ErrorTemplate, "Failed to delete a judge")
end

@enduml


