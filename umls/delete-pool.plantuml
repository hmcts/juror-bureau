@startuml delete-pool
hide unlinked
!include generic-blocks.plantuml

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant PoolOverviewPage <</pool-overview>>
participant DeletePoolPage <</delete-pool>>
participant GenericErrorPage <</_errors/generic>>

''' CONTROLLER AND REQUEST OBJECTS
participant DeletePoolController <<delete-pool.controller.js>>
participant PoolSummaryObject <<poolSummaryObject.get()>>
participant DeletePoolObject <<deletePoolObject.delete()>>

''' TEMPLATES
participant ConfirmTemplate <<delete-pool/confirm.njk>>
participant HasMembersTemplate <<delete-pool/has-members.njk>>
participant LockedTemplate <<delete-pool/locked.njk>>
participant ErrorTemplate <<_errors/generic.njk>>

''' BACKEND CONTROLLER
participant BackendController


''' JOURNEY FLOW
Actor -> PoolOverviewPage : click 'delete pool' button
PoolOverviewPage -> DeletePoolController : Call page controller
$genericAPICall(DeletePoolController, PoolSummaryObject, ErrorTemplate, "Failed to fetch pool summary (delete pool journey)")
$renderTemplateToPage(DeletePoolController, ConfirmTemplate, DeletePoolPage)
alt Pool has members
  $renderTemplateToPage(DeletePoolController, HasMembersTemplate, DeletePoolPage)
end

Actor -> DeletePoolPage : click 'delete pool' button
DeletePoolPage -> DeletePoolController : Call page controller
DeletePoolController -> DeletePoolObject : build request object
DeletePoolObject -> BackendController : send backend request

alt Failed to delete pool
  DeletePoolObject <-- BackendController : Error response
  DeletePoolController <-- DeletePoolObject : reject requestObject

  alt Pool is locked
    $renderTemplateToPage(DeletePoolController, LockedTemplate, DeletePoolPage)
  end

  $renderGenericErrorPage(DeletePoolController, ErrorTemplate)
end

DeletePoolObject <- BackendController : ok response
DeletePoolController <- DeletePoolObject : resolve request
PoolOverviewPage <- DeletePoolController : redirect to Pool Overview
Actor <- PoolOverviewPage : render HTML

@enduml