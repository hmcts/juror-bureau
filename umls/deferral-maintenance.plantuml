@startuml deferral-maintenance
hide unlinked
!include generic-blocks.plantuml

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant PoolRequestsPage <</pool-management>>
participant DeferralMaintenancePage <</pool-management/deferral-maintenance/:locationCode>>
participant ProcessDeferralPage <</pool-management/deferral-maintenance/:locationCode/process>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant DeferralMaintenanceController <<summons-management.controller.js>>
participant DeferralsObj <<deferralMaintenance.deferrals.get()>>
participant AvailablePoolsObj <<deferralMaintenance.availablePools.get()>>
participant AllocateJurorsObj <<deferralMaintenance.allocateJurors.post()>>


''' TEMPLATES
participant DeferralMaintenanceTemplate <</pool-management/deferral-maintenance/index.njk>>
participant ProcessDeferralTemplate <</pool-management/deferral-maintenance/pools.njk>>
participant GenericErrorTemplate <<_errors/generic.njk>> #lavender

''' FILTERS AND VALIDATORS
participant DeferralMaintenanceValidator

''' BACKEND CONTROLLER
participant BackendController

''' JOURNEY FLOW
Actor -> PoolRequestsPage : navigate to deferral maintanence page
PoolRequestsPage -> DeferralMaintenanceController : call page controller

$renderTemplateToPage(DeferralMaintenanceController, DeferralMaintenanceTemplate, DeferralMaintenancePage)

Actor -> DeferralMaintenancePage : select location and click find
DeferralMaintenancePage -> DeferralMaintenanceController : call page controller with locationCode

$validateInput(DeferralMaintenanceController, DeferralMaintenanceValidator, DeferralMaintenanceTemplate, DeferralMaintenancePage, "Invalid location code")

$callAPIRenderErrorOnForm(DeferralMaintenanceController, DeferralsObj, GenericErrorTemplate, "Failed to fetch deferrals", DeferralMaintenanceTemplate, DeferralMaintenancePage)

$renderTemplateToPage(DeferralMaintenanceController, DeferralMaintenanceTemplate, DeferralMaintenancePage)

Actor -> DeferralMaintenancePage : open filter panel and select filters
DeferralMaintenancePage -> DeferralMaintenanceController : call page controller with locationCode and filters
$renderTemplateToPage(DeferralMaintenanceController, DeferralMaintenanceTemplate, DeferralMaintenancePage)


Actor -> DeferralMaintenancePage : select deferrals and click 'add to pool'
DeferralMaintenancePage -> DeferralMaintenanceController : call process controller with selected deferrals
$validateInput(DeferralMaintenanceController, DeferralMaintenanceValidator, DeferralMaintenanceTemplate, DeferralMaintenancePage, "No deferrals selected")
$genericAPICall(DeferralMaintenanceController, AvailablePoolsObj, GenericErrorTemplate, "Failed to fetch available pools")
$renderTemplateToPage(DeferralMaintenanceController, ProcessDeferralTemplate, ProcessDeferralPage)

Actor -> ProcessDeferralPage : select pool and click 'confirm'
ProcessDeferralPage -> DeferralMaintenanceController : call process controller with selected pool
$validateInput(DeferralMaintenanceController, DeferralMaintenanceValidator, ProcessDeferralTemplate, ProcessDeferralPage, "No pool selected")
$callAPIRenderErrorOnForm(DeferralMaintenanceController, AllocateJurorsObj, GenericErrorTemplate, "Failed to fetch deferrals", ProcessDeferralTemplate, ProcessDeferralPage)
$callAPIRenderErrorOnForm(DeferralMaintenanceController, DeferralsObj, GenericErrorTemplate, "Failed to fetch deferrals", DeferralMaintenanceTemplate, DeferralMaintenancePage)
$renderTemplateToPage(DeferralMaintenanceController, DeferralMaintenanceTemplate, DeferralMaintenancePage)