@startuml convert-nil-pool
hide unlinked
!include generic-blocks.plantuml

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant PoolOverviewPage <</pool-overview>>
participant ConvertNilPoolPage <</convert>>
participant ChangeDeferralsPage <</change-deferrals>>
participant CheckDetailsPage <</check-details>>
participant PoolManagementPage <<pool-management>>
participant GenericErrorPage <</error>>


''' CONTROLLER AND REQUEST OBJECTS
participant PoolManagementController <<pool-management.controller.js>>
participant PoolOverviewController <<pool-overview.controller.js>>
participant ConvertNilPoolController <<convert-nil-pool.controller.js>>
participant PoolSummaryObject <<poolSummary.get()>>
participant FetchCourtDeferralsObject <<FetchCourtDeferrals.get()>>
participant NilPoolConvertObject <<NilPoolConvert.put()>>

''' TEMPLATES
participant PoolOverviewTemplate <<pool-overview.njk>>
participant FormTemplate <<convert-nil-pool/form.njk>>
participant ChangeDeferralsTemplate <<change-deferrals.njk>>
participant CheckDetailsTemplate <<check-details.njk>>
participant ErrorTemplate <<_errors/generic.njk>>

''' FILTERS AND VALIDATORS
participant PoolDetailsValidator
participant DeferralsValidator

''' BACKEND CONTROLLER
participant BackendController



''' JOURNEY FLOW
Actor -> PoolOverviewPage : convert nil pool
PoolOverviewPage -> ConvertNilPoolController : call page controller
$genericAPICall(ConvertNilPoolController, PoolSummaryObject, GenericErrorTemplate, "Failed to fetch the pool details when converting a nil pool")

alt Pool is not a nil pool
    PoolOverviewController <- ConvertNilPoolController : redirect to pool overview
    PoolOverviewPage <- PoolOverviewController : redirect to pool overview
    Actor <- PoolOverviewPage : render pool overview page with error banner
end

$callAPIRenderErrorOnForm(ConvertNilPoolController, FetchCourtDeferralsObject, ErrorTemplate, "Failed to fetch court deferrals when converting a nil pool", PoolOverviewTemplate, PoolOverviewPage, PoolOverviewController)

$renderTemplateToPage(ConvertNilPoolController, FormTemplate, ConvertNilPoolPage)

alt change court deferrals
    Actor -> ConvertNilPoolPage : change court deferrals
    ConvertNilPoolPage -> ConvertNilPoolController : call page controller
    $renderTemplateToPage(ConvertNilPoolController, ChangeDeferralsTemplate, ChangeDeferralsPage)
    Actor -> ChangeDeferralsPage : enter no of court deferrals
    ChangeDeferralsPage -> ConvertNilPoolController : call page controller
    $validateInput(ConvertNilPoolController, DeferralsValidator, ChangeDeferralsTemplate, ChangeDeferralsPage)
    $renderTemplateToPage(ConvertNilPoolController, FormTemplate, ConvertNilPoolPage)
end

Actor -> ConvertNilPoolPage : enter details and submit form
ConvertNilPoolPage -> ConvertNilPoolController : call page controller
$validateInput(ConvertNilPoolController, PoolDetailsValidator, FormTemplate, ConvertNilPoolPage)

$renderTemplateToPage(ConvertNilPoolController, CheckDetailsTemplate, CheckDetailsPage)
Actor -> CheckDetailsPage : confirm details and submit
CheckDetailsPage -> ConvertNilPoolController : call page controller
$genericAPICall(ConvertNilPoolController, NilPoolConvertObject, ErrorTemplate, "Failed to convert nil pool to active pool")

PoolOverviewController <- ConvertNilPoolController : redirect to pool overview
PoolOverviewPage <- PoolOverviewController : redirect to pool overview
Actor <- PoolOverviewPage : render pool overview page with success banner

@enduml