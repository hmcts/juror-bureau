@startuml juror-update-transfer

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant JurorUpdatePage <</update>>
participant TransferCourtPage <</transfer/select-court>>
participant TransferCourtConfirmPage <</transfer/confirm>>
participant JurorRecordOverviewPage <</overview>>

''' CONTROLLER AND REQUEST OBJECTS
participant JurorUpdateController <<juror-update.controller.js>>
participant JurorRecordObject <<record.get()>>
participant FetchAllCourtsObject <<fetchAllCourts.get()>>
participant JurorTransferObject <<jurorTransfer.put()>>


''' TEMPLATES
participant ExcusalTemplate <<summons-management/excusal.njk>>
participant JurorUpdateTemplate <<juror-management/update-juror-record.njk>>
participant TransferCourtTemplate <<juror-management/transfer-court.njk>>
participant TransferCourtConfirmTemplate <<juror-management/transfer-court-confirm.njk>>

''' FILTERS AND VALIDATORS
participant JurorUpdateValidator
participant JurorTransferValidator

''' BACKEND CONTROLLER
participant BackendController


Actor -> JurorUpdatePage : update juror record

JurorUpdatePage -> JurorUpdateController : call page controller

JurorUpdateController -> JurorRecordObject : build request object
JurorRecordObject -> BackendController : send backend request
JurorRecordObject <- BackendController : ok response
JurorUpdateController <- JurorRecordObject : resolve request

JurorUpdateController -> JurorUpdateTemplate : request and build template
JurorUpdateController <- JurorUpdateTemplate : return HTML
JurorUpdatePage <- JurorUpdateController : return HTML
Actor <- JurorUpdatePage : render HTML

alt Failed to retrieve juror record details
    JurorRecordObject <-- BackendController : error response
    JurorUpdateController <-- JurorRecordObject : reject requestObject
    JurorUpdatePage <-- JurorUpdateController : error response
    Actor <-- JurorUpdatePage : render error message
end

Actor -> JurorUpdatePage : Select transfer juror to another court
JurorUpdatePage -> JurorUpdateController : call page controller
JurorUpdateController -> JurorUpdateValidator : validate selection
JurorUpdateController <- JurorUpdateValidator : selection is valid

alt Update selection is missing
    JurorUpdateController <-- JurorUpdateValidator : decision is missing
    JurorUpdatePage <-- JurorUpdateController : error response
    Actor <-- JurorUpdatePage : render error message
end

JurorUpdateController -> FetchAllCourtsObject : build request object
FetchAllCourtsObject -> BackendController : send backend request
FetchAllCourtsObject <- BackendController : ok response
JurorUpdateController <- FetchAllCourtsObject : resolve request

JurorUpdateController -> TransferCourtTemplate : request and build template
JurorUpdateController <- TransferCourtTemplate : return HTML
TransferCourtPage <- JurorUpdateController : return HTML
Actor <- TransferCourtPage : render HTML

alt Failed to retrieve courts list
    FetchAllCourtsObject <-- BackendController : error response
    JurorUpdateController <-- FetchAllCourtsObject : reject requestObject
    TransferCourtPage <-- JurorUpdateController : error response
    Actor <-- TransferCourtPage : render error message
end

Actor -> TransferCourtPage : Select court to transfer to, and service start date
TransferCourtPage -> JurorUpdateController : call page controller
JurorUpdateController -> JurorTransferValidator : validate selection
JurorUpdateController <- JurorTransferValidator : selection is valid

alt Court to transfer to is missing
    JurorUpdateController <-- JurorTransferValidator : Court is missing
    TransferCourtPage <-- JurorUpdateController : error response
    Actor <-- TransferCourtPage : render error message
end

alt Service date is missing
    JurorUpdateController <-- JurorTransferValidator : Service date is missing
    TransferCourtPage <-- JurorUpdateController : error response
    Actor <-- TransferCourtPage : render error message
end

JurorUpdateController -> TransferCourtConfirmTemplate : request and build template
JurorUpdateController <- TransferCourtConfirmTemplate : return HTML
TransferCourtConfirmPage <- JurorUpdateController : return HTML
Actor <- TransferCourtConfirmPage : render HTML

Actor -> TransferCourtConfirmPage : User confirms transfer

JurorUpdateController -> JurorTransferObject : build request object
JurorTransferObject -> BackendController : send backend request
JurorTransferObject <- BackendController : ok response
JurorUpdateController <- JurorTransferObject : resolve request

JurorUpdateController -> JurorRecordController : redirect to inbox
JurorRecordPage <- JurorRecordController : redirect to juror record page
Actor <- JurorRecordPage : redirect to updated juror record and display transferred banner

alt Failed to transfer juror
    JurorTransferObject <-- BackendController : error response
    JurorUpdateController <-- JurorTransferObject : reject requestBody
    JurorUpdatePage <-- JurorUpdateController : redirect to juror update page and pass error response
    Actor <-- JurorUpdatePage : render error message
end

@enduml


