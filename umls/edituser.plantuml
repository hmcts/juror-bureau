@startuml Edit users

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant UserRecordPage <</administration/users/user-record>>
participant EditUserPage <</administration/users/edit-user>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant EditUsersController <<edit-user.controller.js>> #lightyellow
participant UserRecordObject <<usersDAO.getUserRecord()>> #lightyellow
participant EditUserObject <<usersDAO.editUserType()>> #lightyellow
participant EditUsertypeObject <<usersDAO.editUser()>> #lightyellow

''' TEMPLATES
participant UserRecordTemplate <</administration/users/user-record.njk>>
participant EditUserTemplate <</administration/users/user-record.njk>>
participant ErrorTemplate <<_errors/generic.njk>> #lavender

''' BACKEND CONTROLLER
participant BackendController

Actor -> UserRecordPage: click edit user
UserRecordPage -> EditUsersController : call edit users controller

EditUsersController -> UserRecordObject : build request object
UserRecordObject -> BackendController : send backend request
UserRecordObject <- BackendController : ok response
EditUsersController <- UserRecordObject : resolve request

EditUsersController -> EditUserTemplate : request and build template
EditUsersController <- EditUserTemplate : return HTML
EditUserPage <- EditUsersController : return HTML
Actor <- EditUserPage : render HTML

Actor -> EditUserPage: click save changes
EditUserPage -> EditUsersController : call edit users controller

Actor -> EditUserPage: click change user type and save user type
EditUserPage -> EditUsersController : call edit users controller

EditUsersController -> EditUsertypeObject : build request object
EditUsertypeObject -> BackendController : send backend request
EditUsertypeObject <- BackendController : ok response
EditUsersController <- EditUsertypeObject : resolve request

EditUsersController -> EditUserObject : build request object
EditUserObject -> BackendController : send backend request
EditUserObject <- BackendController : ok response
EditUsersController <- EditUserObject : resolve request

EditUsersController -> UserRecordTemplate : request and build template
EditUsersController <- UserRecordTemplate : return HTML
UserRecordPage <- EditUsersController : return HTML
Actor <- UserRecordPage : render HTML


alt Failed to fetch user details
    UserRecordObject <-- BackendController : error response
    EditUsersController <-- UserRecordObject : reject requestObject
    EditUsersController -> ErrorTemplate : request and build template
    EditUsersController <- ErrorTemplate : return HTML
    GenericErrorPage <- EditUsersController : return HTML
    Actor <- GenericErrorPage : render error page
end

alt Failed to update user details
    EditUserObject <-- BackendController : error response
    EditUsersController <-- EditUserObject : reject requestObject
    EditUsersController -> ErrorTemplate : request and build template
    EditUsersController <- ErrorTemplate : return HTML
    GenericErrorPage <- EditUsersController : return HTML
    Actor <- GenericErrorPage : render error page
end

alt Failed to edit existing users type
    EditUsertypeObject <-- BackendController : error response
    EditUsersController <-- EditUsertypeObject : reject requestObject
    EditUsersController -> ErrorTemplate : request and build template
    EditUsersController <- ErrorTemplate : return HTML
    GenericErrorPage <- EditUsersController : return HTML
    Actor <- GenericErrorPage : render error page
end