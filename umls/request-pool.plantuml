@startuml request-pool
hide unlinked
!include generic-blocks.plantuml

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant PoolManagement <</pool-management>>
participant RequestPoolPage <</pool-management/request-pool>>
participant SelectCourtPage <</select-court>>
participant PoolDetailsPage <</pool-details>>
participant CheckDetailsPage <</check-details>>
participant ChangeDatePage <</change-attendance-date>>
participant ChangeTimePage <</change-attendance-time>>
participant ChangeDeferralsPage <</change-deferrals>>
participant ChangePoolNumberPage <</change-pool-number>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant PoolManagementController <<pool-management.controller.js>>
participant RequestPoolController <<request-pool.controller.js>>
participant MatchCourtObject <<matchUserCourt()>>
participant FetchCourtsObject <<fetchCourtsDAO.get()>>
participant FetchCourtDeferralsObject <<requestPoolObj.fetchCourtDeferrals.get()>>
participant GeneratePoolNumberObject <<requestPoolObj.generatePoolNumber.get()>>
participant GeneratePoolNumberObject <<requestPoolObj.generatePoolNumber.get()>>
participant CreatePoolRequestObj <<crequestPoolObj.reatePoolRequest.post()>>
participant FetchPoolNumbersObject <<requestPoolObj.fetchPoolNumbers.get()>>
participant ErrorTemplate <<_errors/generic.njk>>

''' TEMPLATES
participant SelectCourtTemplate <<select-court.njk>>
participant PoolDetailsTemplate <<pool-details/index.njk>>
participant CheckDetailsTemplate <<check-details.njk>>
participant ChangeDateTemplate <<change-attendance-date.njk>>
participant ChangeTimeTemplate <<change-attendance-time.njk>>
participant ChangeDeferralsTemplate <<change-deferrals.njk>>
participant ChangePoolNumberTemplate <<change-pool-number.njk>>

''' FILTERS AND VALIDATORS
participant CourtValidator
participant DateValidator
participant TimeValidator
participant DeferralsValidator
participant PoolDetailsValidator
participant PoolNumberValidator

''' BACKEND CONTROLLER
participant BackendController



''' JOURNEY FLOW
Actor -> RequestPoolPage : Click 'Request new pool'
RequestPoolPage -> RequestPoolController : call page controller
$genericAPICall(RequestPoolController, FetchCourtsObject, ErrorTemplate, "Failed to fetch courts list")
$renderTemplateToPage(RequestPoolController, SelectCourtTemplate, SelectCourtPage)

Actor -> SelectCourtPage : user selects court
SelectCourtPage -> RequestPoolController : call page controller
$validateInput(RequestPoolController, CourtValidator, SelectCourtTemplate, SelectCourtPage)
RequestPoolController -> MatchCourtObject : validate court selection exists
alt Court locations invalid
  RequestPoolController <-- MatchCourtObject : reject promise
  $renderErrorOnForm(RequestPoolController, SelectCourtTemplate, SelectCourtPage)
end
RequestPoolController <-- MatchCourtObject : court location valid

$genericAPICall(RequestPoolController, FetchCourtDeferralsObject, ErrorTemplate, "Failed to fetch the number of court deferrals")
$renderTemplateToPage(RequestPoolController, PoolDetailsTemplate, PoolDetailsPage)

alt change attendance date
  Actor -> CheckDetailsPage : click 'Change attendance date'
  CheckDetailsPage -> RequestPoolController : call page controller
  $renderTemplateToPage(RequestPoolController, ChangeDateTemplate, ChangeDatePage)

  Actor -> ChangeDatePage : user changes date
  ChangeDatePage -> RequestPoolController : call page controller
  $validateInput(RequestPoolController, DateValidator, ChangeDateTemplate, ChangeDatePage)
  Actor <- RequestPoolController : redirect to Pool Details page
end

alt change attendance time
  Actor -> CheckDetailsPage : click 'Change attendance time'
  CheckDetailsPage -> RequestPoolController : call page controller
  $renderTemplateToPage(RequestPoolController, ChangeTimeTemplate, ChangeTimePage)

  Actor -> ChangeTimePage : user changes time
  ChangeTimePage -> RequestPoolController : call page controller
  $validateInput(RequestPoolController, TimeValidator, ChangeTimeTemplate, ChangeTimePage)
  Actor <- RequestPoolController : redirect to Pool Details page
end

alt change court deferrals
  Actor -> CheckDetailsPage : click 'Change deferrals'
  CheckDetailsPage -> RequestPoolController : call page controller
  $renderTemplateToPage(RequestPoolController, ChangeDeferralsTemplate, ChangeDeferralsPage)

  Actor -> ChangeDeferralsPage : user changes deferrals
  ChangeDeferralsPage -> RequestPoolController : call page controller
  $validateInput(RequestPoolController, DeferralsValidator, ChangeDeferralsTemplate, ChangeDeferralsPage)
  Actor <- RequestPoolController : redirect to Pool Details page
end

Actor -> PoolDetailsPage : enter details and click 'Continue'
PoolDetailsPage -> RequestPoolController : call page controller
$validateInput(RequestPoolController, PoolDetailsValidator, PoolDetailsTemplate, PoolDetailsPage)

$genericAPICall(RequestPoolController, GeneratePoolNumberObject, ErrorTemplate, "Failed to generate a new pool number")
$renderTemplateToPage(RequestPoolController, CheckDetailsTemplate, CheckDetailsPage)

alt change pool number
  Actor -> CheckDetailsPage : click 'Change pool number'
  CheckDetailsPage -> RequestPoolController : call page controller
  $genericAPICall(RequestPoolController, FetchPoolNumbersObject, ErrorTemplate, "Failed to fetch pool numbers")
  $renderTemplateToPage(RequestPoolController, ChangePoolNumberTemplate, ChangePoolNumberPage)

  Actor -> ChangePoolNumberPage : user changes pool number
  ChangePoolNumberPage -> RequestPoolController : call page controller
  $validateInput(RequestPoolController, PoolNumberValidator, ChangePoolNumberTemplate, ChangePoolNumberPage)
  Actor <- RequestPoolController : redirect to Check Details page
end

Actor -> CheckDetailsPage : click 'Request pool'
$genericAPICall(RequestPoolController, CreatePoolRequestObj, ErrorTemplate, "Failed to create a new pool request")
Actor <- RequestPoolController : redirect to Pool Requests page

@enduml