@startuml create-nil-pool
hide unlinked
!include generic-blocks.plantuml

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant PoolManagementPage <</pool-management>>
participant RequestPoolPage <</pool-management/request-pool>>
participant SelectCourtPage <</select-court?nil=true>>
participant NilPoolDetailsPage <</nil-pool>>
participant HasDeferralsPage <</nil-pool/has-deferrals>>
participant CheckDetailsPage <</check-details>>
participant ChangeDatePage <</nil-pool/change-attendance-date>>
participant InvalidDatePage <<nil-pool/invalid-date>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant PoolManagementController <<pool-management.controller.js>>
participant NilPoolController <<nil-pool.controller.js>>
participant MatchCourtObject <<matchUserCourt()>>
participant CheckNilPoolObject <<nilPoolCheck.post()>>
participant CreateNilPoolObject <<nilPoolCreate.post()>>
participant ErrorTemplate <<_errors/generic.njk>>

''' TEMPLATES
participant PoolManagementTemplate <<pool-management/index.njk>>
participant SelectCourtTemplate <<pool-management/_common/select-court.njk>>
participant NilPoolDetailsTemplate <<ppool-management/nil-pool/index.njk>>
participant HasDeferralsTemplate <<pool-management/nil-pool/has-deferrals.njk>>
participant CheckDetailsTemplate <<pool-management/nil-pool/check-details.njk>>
participant ChangeDateTemplate <<pool-management/_common/change-attendance-date.njk>>
participant InvalidDateTemplate <<pool-management/_common/invalid-date.njk>>

''' FILTERS AND VALIDATORS
participant RequestPoolValidator

''' BACKEND CONTROLLER
participant BackendController



''' JOURNEY FLOW
Actor -> RequestPoolPage : Select 'Nil Pool' option
RequestPoolPage -> NilPoolController : call page controller

alt is bureau user
  $renderTemplateToPage(NilPoolController, SelectCourtTemplate, SelectCourtPage)

  Actor -> SelectCourtPage : Select court and continue
  $validateInput(NilPoolController, RequestPoolValidator, SelectCourtTemplate, SelectCourtPage)
  NilPoolController -> MatchCourtObject : validate court selection exists
  alt Court locations invalid
    NilPoolController <-- MatchCourtObject : reject promise
    $renderErrorOnForm(NilPoolController, SelectCourtTemplate, SelectCourtPage)
  end
  NilPoolController <-- MatchCourtObject : court location valid
end

$renderTemplateToPage(NilPoolController, NilPoolDetailsTemplate, NilPoolDetailsPage)

alt user clicks change court
  Actor -> NilPoolDetailsPage : click 'Change court'
  $renderTemplateToPage(NilPoolController, SelectCourtTemplate, SelectCourtPage)

  Actor -> SelectCourtPage : Select court and continue
  $validateInput(NilPoolController, RequestPoolValidator, SelectCourtTemplate, SelectCourtPage)
  NilPoolController -> MatchCourtObject : validate court selection exists
  alt Court locations invalid
    NilPoolController <-- MatchCourtObject : reject promise
    $renderErrorOnForm(NilPoolController, SelectCourtTemplate, SelectCourtPage)
  end
  NilPoolController <-- MatchCourtObject : court location valid
  $renderTemplateToPage(NilPoolController, NilPoolDetailsTemplate, NilPoolDetailsPage)
end

alt user clicks change date
  Actor -> NilPoolDetailsPage : click 'Change attendance date'
  $renderTemplateToPage(NilPoolController, ChangeDateTemplate, ChangeDatePage)

  Actor -> ChangeDatePage : enter date and continue
  $validateInput(NilPoolController, RequestPoolValidator, ChangeDateTemplate, ChangeDatePage)

  alt date is weekend or bank holidays
    $renderTemplateToPage(NilPoolController, InvalidDateTemplate, InvalidDatePage)

    Actor -> InvalidDatePage : click 'continue'
    $renderTemplateToPage(NilPoolController, NilPoolDetailsTemplate, NilPoolDetailsPage)
  end  
end

Actor -> NilPoolDetailsPage : enter details and continue
$validateInput(NilPoolController, RequestPoolValidator, NilPoolDetailsTemplate, NilPoolDetailsPage)
$genericAPICall(NilPoolController, CheckNilPoolObject, ErrorTemplate, "Could not check if nil pool can be created")

alt has deferrals on selected date
  $renderTemplateToPage(NilPoolController, HasDeferralsTemplate, HasDeferralsPage)
end

$renderTemplateToPage(NilPoolController, CheckDetailsTemplate, CheckDetailsPage)
Actor -> CheckDetailsPage : confirm details and create nil pool
$genericAPICall(NilPoolController, CreateNilPoolObject, ErrorTemplate, "Could not create nil pool")
PoolManagementController <- NilPoolController : redirect to pool management page
$renderTemplateToPage(PoolManagementController, PoolManagementTemplate, PoolManagementPage)
@enduml