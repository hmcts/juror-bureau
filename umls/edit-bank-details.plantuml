@startuml edit-bank-details
hide unlinked
!include generic-blocks.plantuml

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant JurorRecordExpensesPage <</juror-management/record/:jurorNumber/expenses>>
participant DraftExpenseRecordPage <</juror-management/unpaid-attendance/expense-record/:jurorNumber/:poolNumber>>
participant BankDetailsPage <</juror-management/expenses/:jurorNumber/:poolNumber/bank-details>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant JurorRecordController <<juror-record.controller.js>> #lightyellow
participant ExpenseRecordController <<expense-record.controller.js>> #lightyellow
participant EditBankDetailsController <<edit-bank-details.controller.js>> #lightyellow
participant BankDetailsObject <<jurorBankDetailsDAO.get()>> #lightyellow
participant SetBankDetailsObject <<jurorBankDetailsDAO.patch()>> #lightyellow

''' TEMPLATES
participant JurorRecordExpensesTemplate <<juror-management/juror-record/expenses.njk>> #lavender
participant DraftExpenseRecordTemplate <<juror-management/expense-record/expense-record.njk>> #lavender
participant BankDetailsTemplate <<expenses/default-expenses.njk>> #lavender
participant ErrorTemplate <<_errors/generic.njk>> #lavender

''' FILTERS AND VALIDATORS
participant BankDetailsValidator

''' BACKEND CONTROLLER
participant BackendController


alt Navigate from juror record
  Actor -> JurorRecordExpensesPage : click add or change bank details link
  JurorRecordExpensesPage -> EditBankDetailsController : call bank details controller 
else Navigate from expense record
  Actor -> DraftExpenseRecordPage : click add or change bank details link
  DraftExpenseRecordPage -> EditBankDetailsController : call bank details controller
end

$genericAPICall(EditBankDetailsController, BankDetailsObject, ErrorTemplate, "Failed to fetch jurors bank details")
 
$renderTemplateToPage(EditBankDetailsController, BankDetailsTemplate, BankDetailsPage)

Actor -> BankDetailsPage : enters valid bank details values

$validateInput(EditBankDetailsController, BankDetailsValidator, BankDetailsTemplate, BankDetailsPage, "Invalid bank details entered")

$genericAPICall(EditBankDetailsController, SetBankDetailsObject, ErrorTemplate, "Failed to set jurors bank details")


EditBankDetailsController -> BankDetailsObject : build request object
BankDetailsObject -> BackendController : send backend request

$APIErrorAlt(EditBankDetailsController, BankDetailsObject, ErrorTemplate, "Failed to compare etags for when updating bank details")

alt Bank details updated by another user
  $renderErrorOnForm(EditBankDetailsController, BankDetailsTemplate, BankDetailsPage)
end

BankDetailsObject <- BackendController : ok response - no other changes
EditBankDetailsController <- BankDetailsObject : resolve request

alt Initally navigated from juror record
  EditBankDetailsController -> JurorRecordController : call juror record controller controller
  $renderTemplateToPage(JurorRecordController, JurorRecordExpensesTemplate, JurorRecordExpensesPage)
else Initally navigated from expense record
  EditBankDetailsController -> ExpenseRecordController : call juror record controller controller
  $renderTemplateToPage(ExpenseRecordController, DraftExpenseRecordTemplate, DraftExpenseRecordPage)
end

@enduml







    