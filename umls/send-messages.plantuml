@startuml send-messages
hide unlinked
!include generic-blocks.plantuml

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant HomePage <</homepage>>
participant MessagesListPage <</messaging/send>>
participant MessagesTemplatePage <</messaging/send/:message>>
participant FindJurorsPage <</messaging/send/:message/find-jurors>>
participant SelectTrialPage <</messaging/send/:message/select-trial>>
participant SelectJurorsPage <</messaging/send/:message/select-jurors>>
participant MessageConfirmationPage <</messaging/send/:message/confirmation>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant sendMessagesController <<send-messages.controller.js>> #lightyellow
participant messageTemplateDAO <<messageTemplateDAO.get()>> #lightyellow
participant trialsListDAO <<trialsListDAO.post()>> #lightyellow
participant sendMessage <<sendMessage.post()>> #lightyellow
participant jurorSearchDAO <<jurorSearchDAO.post()>> #lightyellow
participant populatedMessageDAO <<populatedMessageDAO.post()>> #lightyellow

''' TEMPLATES
participant MessagesListTemplate <</messaging/messages-list.njk>>
participant MessagesTemplate <</messaging/messages-template.njk>>
participant FindJurorsTemplate <</messaging/find-jurors.njk>>
participant SelectTrialTemplate <</messaging/select-trial.njk>>
participant SelectJurorsTemplate <</messaging/select-jurors.njk>>
participant MessageConfirmationTemplate <</messaging/message-confirmation.njk>>
participant GenericErrorTemplate <<_errors/generic.njk>> #lavender

''' FILTERS AND VALIDATORS
participant messagingValidator


''' BACKEND CONTROLLER
participant BackendController

''' JOURNEY FLOW

Actor -> HomePage : click 'messages' in apps tray
HomePage -> sendMessagesController : call controller
$renderTemplateToPage(sendMessagesController, MessagesListTemplate, MessagesListPage)

Actor -> MessagesListPage : selects message from list
$genericAPICall(sendMessagesController, messageTemplateDAO, GenericErrorTemplate, "Unable to fetch message template")
$renderTemplateToPage(sendMessagesController, MessagesTemplate, MessagesTemplatePage)
Actor -> MessagesTemplatePage : enter required details and click 'continue'
MessagesTemplatePage -> sendMessagesController : call controller
$validateInput(sendMessagesController, messagingValidator, MessagesTemplate, MessagesTemplatePage)

alt NO trial number required for message
  $renderTemplateToPage(sendMessagesController, FindJurorsTemplate, FindJurorsPage)
  Actor -> FindJurorsPage : enter search criteria and click 'Continue'
  FindJurorsPage -> sendMessagesController : call controller
  $validateInput(sendMessagesController, messagingValidator, FindJurorsTemplate, FindJurorsPage)
else trial number required for message
  $genericAPICall(sendMessagesController, trialsListDAO, GenericErrorTemplate, "Failed to fetch trials")
  $renderTemplateToPage(sendMessagesController, SelectTrialTemplate, SelectTrialPage)
  alt User filters on trials
    Actor -> SelectTrialPage : filter on trials by trial number input field
    SelectTrialPage -> sendMessagesController : call controller to filter on trials
    $validateInput(sendMessagesController, messagingValidator, SelectTrialTemplate, SelectTrialPage)
    $genericAPICall(sendMessagesController, trialsListDAO, GenericErrorTemplate, "Failed to fetch trials")
    $renderTemplateToPage(sendMessagesController, SelectTrialTemplate, SelectTrialPage)
  end
  Actor -> SelectTrialPage : select trial and click 'Continue with selected'
  SelectTrialPage -> sendMessagesController : call controller
end

$genericAPICall(sendMessagesController, jurorSearchDAO, GenericErrorTemplate, "Failed to fetch list of jurors")
$renderTemplateToPage(sendMessagesController, SelectJurorsTemplate, SelectJurorsPage)
alt User filters on jurors
  Actor -> SelectJurorsPage : filter on jurors using filter panel
  SelectJurorsPage -> sendMessagesController : call controller to filter on jurors
  $validateInput(sendMessagesController, messagingValidator, SelectJurorsTemplate, SelectJurorsPage)
  $genericAPICall(sendMessagesController, jurorSearchDAO, GenericErrorTemplate, "Failed to fetch list of jurors")
  $renderTemplateToPage(sendMessagesController, SelectJurorsTemplate, SelectJurorsPage)
end

Actor -> SelectJurorsPage : select jurors and click 'Continue with selected'

$genericAPICall(sendMessagesController, populatedMessageDAO, GenericErrorTemplate, "Unable to fetch message")
$renderTemplateToPage(sendMessagesController, MessageConfirmationTemplate, MessageConfirmationPage)

Actor -> MessageConfirmationPage : click 'Send message'
MessageConfirmationPage -> sendMessagesController : call controller
$genericAPICall(sendMessagesController, sendMessage, GenericErrorTemplate, "Unable to send messages")

MessagesListPage <- sendMessagesController : redirect to messages list page
Actor <- MessagesListPage : render HTML with confirmation banner

@enduml
