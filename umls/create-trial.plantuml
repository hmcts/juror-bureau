@startuml create-trial

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant ManageTrialsPage <</trial-management/trials>>
participant CreateTrialPage <</trial-management/create-trial>>
participant TrialDetailPage <</trial-management/trials/:trialNumber/:locationCode/detail>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant CreateTrialController <<create-trial.controller.js>> #lightyellow
participant TrialManagementController <<trial-management.controller.js>> #lightyellow
participant CourtroomsObject <<courtroomsObject.get()>> #lightyellow
participant JudgesObject <<judgesObject.get()>> #lightyellow
participant CreateTrialObject <<createTrialObject.post()>> #lightyellow
participant TrialDetailsObject <<trialDetailsObject.get()>> #lightyellow

''' TEMPLATES
participant CreateTrialTemplate <<trial-management/create-trial.njk>> #lavender
participant TrialDetailTemplate <<trial-management/trial-detail.njk>> #lavender
participant ErrorTemplate <<_errors/generic.njk>> #lavender

''' FILTERS AND VALIDATORS
participant CreateTrialValidator

''' BACKEND CONTROLLER
participant BackendController

Actor -> ManageTrialsPage : Click 'Create a trial button'

ManageTrialsPage -> CreateTrialController : call page controller

CreateTrialController -> CourtroomsObject : build request object
CourtroomsObject -> BackendController : send backend request
CourtroomsObject <- BackendController : ok response
CreateTrialController <- CourtroomsObject : resolve request

alt Failed to fetch courtrooms
  CourtroomsObject <-- BackendController : error response
  CreateTrialController <-- CourtroomsObject : reject requestObject
  CreateTrialController -> ErrorTemplate : request and build template
  CreateTrialController <- ErrorTemplate : return HTML
  GenericErrorPage <- CreateTrialController : return HTML
  Actor <- GenericErrorPage : render error page
end

CreateTrialController -> JudgesObject : build request object
JudgesObject -> BackendController : send backend request
JudgesObject <- BackendController : ok response
CreateTrialController <- JudgesObject : resolve request

alt Failed to fetch judges
  JudgesObject <-- BackendController : error response
  CreateTrialController <-- JudgesObject : reject requestObject
  CreateTrialController -> ErrorTemplate : request and build template
  CreateTrialController <- ErrorTemplate : return HTML
  GenericErrorPage <- CreateTrialController : return HTML
  Actor <- GenericErrorPage : render error page
end

CreateTrialController -> CreateTrialTemplate : request and build template
CreateTrialController <- CreateTrialTemplate : return HTML
CreateTrialPage <- CreateTrialController : return HTML
Actor <- CreateTrialPage : render HTML

Actor -> CreateTrialPage : Enter trial details into form and click 'Create trial'

CreateTrialPage -> CreateTrialController : POST trial details
CreateTrialController -> CreateTrialValidator : validate trial details

alt invalid trial details entered
  CreateTrialController <- CreateTrialValidator : invalid details
  CreateTrialController -> CreateTrialTemplate : request and build template
  CreateTrialController <- CreateTrialTemplate : return HTML
  CreateTrialPage <- CreateTrialController : return error HTML
  Actor <- CreateTrialPage : render error message
end

CreateTrialController <- CreateTrialValidator : valid details entered

CreateTrialController -> CreateTrialObject : build request object
CreateTrialObject -> BackendController : send backend request
JudgesObject <- BackendController : ok response
CreateTrialController <- CreateTrialObject : resolve request

alt Trial could not be created
  CreateTrialObject <-- BackendController : error response
  CreateTrialController <-- CreateTrialObject : reject requestObject
  CreateTrialController -> ErrorTemplate : request and build template
  CreateTrialController <- ErrorTemplate : return HTML
  GenericErrorPage <- CreateTrialController : return HTML
  Actor <- GenericErrorPage : render error page
end

CreateTrialController -> TrialManagementController : call page controller

TrialManagementController -> TrialDetailsObject : build request object
TrialDetailsObject -> BackendController : send backend request
TrialDetailsObject <- BackendController : ok response
TrialManagementController <- TrialDetailsObject : resolve request

alt Failed to fetch trial details
    TrialDetailsObject <-- BackendController : error response
    TrialManagementController <-- TrialDetailsObject : reject requestObject
    TrialManagementController -> TrialsTemplate : request and build template
    TrialManagementController <- TrialsTemplate : return HTML
    ManageTrialsPage <- TrialManagementController : return HTML
    Actor <- ManageTrialsPage : render HTML
end

TrialManagementController -> TrialDetailTemplate : request and build template
TrialManagementController <- TrialDetailTemplate : return HTML
TrialDetailPage <- TrialManagementController : return HTML
Actor <- TrialDetailPage : render HTML


@enduml