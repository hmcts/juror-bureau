@startuml Create User

skinparam Style strictuml 
skinparam SequenceMessageAlignment center

participant Actor

''' LOCAL ROUTING
participant UsersPage <</administration/users/users>>
participant CreateUserPage <</administration/users/create-users/user-details>>
participant CreateUserTypePage <</administration/users/create-users/user-type>>
participant ConfirmUserDetailsPage <</administration/users/create-users/confirm-details>>
participant GenericErrorPage <</error>>

''' CONTROLLER AND REQUEST OBJECTS
participant CreateUsersController <<create-users.controller.js>> #lightyellow
participant CreateUsersObject <<usersDAO.createUser()>> #lightyellow

''' TEMPLATES
participant UsersTemplate <</administration/users/users.njk>>
participant CreateUserTemplate <</administration/users/create-users/user-details.njk>>
participant CreateUserTypeTemplate <</administration/users/create-users/user-type.njk>>
participant ConfirmUserDetailsTemplate <</administration/users/create-users/confirm-details.njk>>
participant ErrorTemplate <<_errors/generic.njk>> #lavender

''' BACKEND CONTROLLER
participant BackendController

Actor -> UsersPage: click create user button
UsersPage -> CreateUsersController : call create users controller



CreateUsersController -> CreateUserTypeTemplate : request and build template
CreateUsersController <- CreateUserTypeTemplate : return HTML

CreateUserTypePage <- CreateUsersController : return HTML
Actor <- CreateUserTypePage : render HTML

Actor -> CreateUserTypePage: click next
CreateUserTypePage -> CreateUsersController : call create users controller

CreateUsersController -> CreateUserTemplate : request and build template
CreateUsersController <- CreateUserTemplate : return HTML

CreateUserPage <- CreateUsersController : return HTML
Actor <- CreateUserPage : render HTML

Actor -> CreateUserPage: click next
CreateUserPage -> CreateUsersController : call create users controller

CreateUsersController -> ConfirmUserDetailsTemplate : request and build template
CreateUsersController <- ConfirmUserDetailsTemplate : return HTML

ConfirmUserDetailsPage <- CreateUsersController : return HTML
Actor <- ConfirmUserDetailsPage : render HTML

Actor -> ConfirmUserDetailsPage: click confirm
ConfirmUserDetailsPage -> CreateUsersController : call create users controller


CreateUsersController -> CreateUsersObject : build request object
CreateUsersObject -> BackendController : send backend request
CreateUsersObject <- BackendController : ok response
CreateUsersController <- CreateUsersObject : resolve request


UsersPage <- CreateUsersController : return HTML
Actor <- UsersPage : render HTML


alt Failed to create new user
    CreateUsersObject <-- BackendController : error response
    CreateUsersController <-- CreateUsersObject : reject requestObject
    CreateUsersController -> ErrorTemplate : request and build template
    CreateUsersController <- ErrorTemplate : return HTML
    GenericErrorPage <- CreateUsersController : return HTML
    Actor <- GenericErrorPage : render error page
end