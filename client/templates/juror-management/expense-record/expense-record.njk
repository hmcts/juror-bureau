{% extends "layouts/default.njk" %}

{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "moj/components/banner/macro.njk" import mojBanner %}

{% from "custom-components/mod-large-tag/macro.njk" import modLargeTag %}

{% block page_title %}{{ serviceName }} - juror-management - unpaid attendance - expense record{% endblock %}
{% block page_identifier %}juror-management - unpaid attendance - expense record{% endblock %}

{% set currentApp = "Jurors" %}

{% block beforeContent %}
    <a href="{{ backLinkUrl }}" class="govuk-back-link">Back</a>
{% endblock %}

{% block content %}

{% include "includes/errors.njk" %}

{% if jurorDetails.name.firstName %}
  {% set jurorName = jurorDetails.name.firstName + ' ' + jurorDetails.name.lastName %}
  {% if jurorDetails.name.title %}
    {% set jurorName = jurorDetails.name.title + ' ' + jurorDetails.name.firstName + ' ' + jurorDetails.name.lastName %}
  {% endif %}
{% else %}
  {% set jurorName = data.name %}
{% endif %}

{% if bannerMessage %}
    {{ mojBanner({
      type: "success",
      text: bannerMessage,
      iconFallbackText: "Success"
    }) }}
  {% endif %}

  <div class="mod-expense-record-header">
    <div>
      <span class="govuk-caption-l">Expenses</span>
    </div>

    <div>
      <a href="{{ setExpensesUrl }}" class="govuk-body govuk-link">Add or change default expenses</a>
    </div>
  </div>
  <div class="mod-expense-record-header">
    <div>
        <h1 class="govuk-heading-l govuk-!-margin-bottom-3">{{jurorName}}</h1>
    </div>

    <div>
      <a href="#" class="govuk-body govuk-link">Add or change bank details</a>
    </div>
  </div>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-one-half">
      {{ govukSummaryList({
        rows: [
          {
            key: {
              text: "Juror number"
            },
            value: {
              html: '<a href=' + url("juror-record.overview.get", { jurorNumber: jurorNumber }) + ' class="govuk-link">' + jurorNumber + '</a>'
            }
          },
          {
            key: {
              text: "Pool number"
            },
            value: {
              text: poolNumber
            }
          }
        ]
      }) }}
    </div>
  </div>

  {% include "./_partials/sub-nav.njk" %}

  {% if currentTab === "draft" %}
    {{ modLargeTag({
      id: "draftTotalTag",
      colour: "grey",
      label: "Total in draft",
      value: ("£" + (expenseData.totals.total_amount | toFixed(2))) if expenseData else "£0.00"
    })}}
  {% elif currentTab === "forApproval" %}
    {{ modLargeTag({
      id: "forApprovalTotalTag",
      colour: "blue",
      label: "Total for approval",
      value: data.total
    })}}
  {% elif currentTab === "approved" %}
    {{ modLargeTag({
      id: "approvedTotalTag",
      label: "Total approved",
      value: data.total
    })}}
  {% endif %}

  <form id="submitExpensesForm" method="POST">

  {% if currentTab === "draft" %}

    <div class="govuk-grid-row">
      <div class="govuk-grid-column-one-half">
        <span>
          {{ govukButton({
            text: "Submit for approval",
            disabled: true if not expenseData,
            attributes: {
              id: "submitApprovalButton",
              formAction: submitUrl
            }
          }) }}
          {{ govukButton({
            text: "Preview audit report",
            href: '#',
            classes: "govuk-button--secondary govuk-!-margin-left-3",
            attributes: {
              id: "previewAuditReportButton"
            }
          }) }}
          {{ govukButton({
            text: "Add a non-attendance day",
            href: '#',
            classes: "govuk-button--secondary govuk-!-margin-left-3",
            attributes: {
              id: "nonAttendanceDayButton"
            }
          }) }}
        </span>
      </div>
    </div>

    {% include "./_partials/draft-table.njk" %}

  {% elif currentTab === "forApproval" %}

    {% include "./_partials/for-approval-table.njk" %}

  {% elif currentTab === "approved" %}

    {% include "./_partials/approved-table.njk" %}
  
  {% endif %}

  </form>
  
{% endblock %}

{% block body_end %}
  {{ super() }}
  <script>
    var checkAllExpenses = $('#check-all-expenses')
    , expenseRows = $('input[id^=expense]')
    , totalCheckedExpenses = $('#totalCheckedExpenses')
    , totalExpenses = $('#totalExpenses')
    , csrfToken = $('#_csrf');

    // checking jurors logic
    if (checkAllExpenses) {
      checkAllExpenses.on('change', function() {
        var isCheckingAll = this.checked;

        request(this.id, isCheckingAll).then(function() {
          expenseRows.each(function(_, element) {
            element.checked = isCheckingAll;
          });

          totalCheckedExpenses.text(isCheckingAll ? totalExpenses.text() : '0');
        });
      });
    }

    if (expenseRows && expenseRows.length) {
      expenseRows.each(function(_, element) {
        element.addEventListener('change', async function() {
          var expenseDate = this.id.split('-')[1];
          var isCheckingExpense = this.checked;

          request(expenseDate, isCheckingExpense).then(function() {
            if (isCheckingJuror) {
              totalCheckedExpenses.text(+totalCheckedExpenses.text() + 1);
            } else {
              totalCheckedExpenses.text(+totalCheckedExpenses.text() - 1);
            }
            updateCheckAllJurorsCheckbox(isCheckingJuror);
          });
        });
      });
    }

    function updateCheckAllJurorsCheckbox(checking) {
      if (checking) {
        if (totalCheckedExpenses.text() === totalExpenses.text()) {
          checkAllExpenses[0].checked = true;
        }
      } else {
        checkAllExpenses[0].checked = false;
      }
    }

    function request(expenseDate, isChecking) {
      var action = isChecking ? 'check' : 'uncheck';

      return $.ajax({
        url: '/juror-management/unpaid-attendance/expense-record/check?expenseDate='
          + expenseDate + '&action=' + action,
        method: 'POST',
        data: {
          _csrf: csrfToken.val(),
        },
      });
    };
  </script>
{% endblock %}
