{% macro dashboardChartBarLine(params) %}

  {% if params.total %}
    {% set totalValue = params.total %}
  {% else %}
    {% set totalValue = params.values[0] + params.values[1] %}
  {% endif %}

  {% if params.deferralExcusalSelection == "All" %}
    {% set deferralExcusalDesc = 'Deferrals/Excusals' %}
    {% set deferralExcusalLabel = 'Deferrals/Excusals (' + params.deferralExcusalCombinedTotal + ')' %}
    {#{% set deferralExcusalLabel = 'Deferrals/Excusals (' + params.deferralTotal + '/' + params.excusalTotal + ')' %}#}

  {% else %}
    {% set deferralExcusalDesc = params.deferralExcusalSelection %}
    {% set deferralExcusalLabel = params.deferralExcusalSelection +' (' + params.deferralExcusalCombinedTotal + ')' %}
  {% endif %}

  {% if params.bureauCourtSelection == "All" %}
    {% set bureauCourtDesc = 'Bureau/Court' %}
  {% else %}
    {% set bureauCourtDesc = params.bureauCourtSelection %}
  {% endif %}

  <div {%- if params.id %} id="{{params.id}}Details"{% endif %} class="govuk-details {%- if params.classes %} {{ params.classes }}{% endif %}" {%- for attribute, value in params.attributes %} {{attribute}}="{{value}}"{% endfor %}>
    
    <div class="column-full govuk-heading-m">
      {{deferralExcusalDesc}} by {{bureauCourtDesc}}: {{params.dateRange}}

      <br/><br/>
    </div>

  </div>

  <div class="govuk-grid-column-full">
    <div class="canvas-deferral-div">
      <canvas id="{{params.id}}Chart" name="{{params.id}}Chart"></canvas>
    </div>
  </div>


  <script nonce="{{ params.nonce }}">
    var ctx = document.getElementById('{{params.id}}Chart').getContext('2d');
    ctx.width  = 0.5;
    ctx.height = 0.5;

    Chart.defaults.global.defaultFontSize = 15;
    Chart.defaults.scale.gridLines.drawOnChartArea = true;

    var datasetList = [];

    // setup deferral/excusal totals bar chart
    const deferTotals = JSON.parse('{{params.deferTotals}}'.replace(/&quot;/g,'"'));
    var ds = {
          label: '{{deferralExcusalLabel}}',
          backgroundColor: 'rgb(200, 200, 200, 0.5)',
          borderColor: 'rgb(100, 100, 100, 0.5)',
          data: deferTotals,
          stack: 'combined',
          type: 'bar'
        }
    datasetList.push(ds);

    // setup deferral/excusal reason line chart
    const chartData = JSON.parse('{{params.chartData}}'.replace(/&quot;/g,'"'));
    var index=0;
    for (index=0; index < chartData.length; index++){
      ds = {
          label: chartData[index].dsLabel,
          backgroundColor: chartData[index].dsRGB,
          borderColor: chartData[index].dsRGB,
          data: chartData[index].dsValues,
          stack: 'combined',
          type: 'line',
          fill: false
        }
      datasetList.push(ds);
    }

    const data = {
      labels: ("{{params.weekLabels}}").split(","),
      datasets: datasetList
    };

    const config = {
      type: 'line',
      data,
      options: {
        legend: {
            display: true,
            position: 'right',
            labels: {
              fontStyle: 'bold',
              fontColor: '#000'
            }
          }
      }
    };

    var dashboardChart = new Chart(
      document.getElementById("{{params.id}}Chart"),
      config
    );


  </script>

{% endmacro %}